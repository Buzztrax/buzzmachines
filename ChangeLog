2009-05-09  Stefan Kost  <ensonic@users.sf.net>

	* Elak/Dist2/Elak_Dist2.bmx:
	* Elak/Dist2/Makefile.am:
	* Elak/SVF/Elak_SVF.bmx:
	* Elak/SVF/Makefile.am:
	* Jeskola/Ninja/Jeskola_NiNjA_dElaY.bmx:
	* Jeskola/Ninja/Makefile.am:
	* Makk/M4/Makefile.am:
	* Makk/M4/Makk_M4.bmw:
	* Makk/M4/Makk_M4.bmw (added):
	* Jeskola/Ninja/Jeskola_NiNjA_dElaY.bmx (added):
	* Elak/Dist2/Elak_Dist2.bmx (added):
	* Elak/SVF/Elak_SVF.bmx (added):
	  Add more demo songs and fix Elak/Dist name to be Dist2.

2009-05-07  Stefan Kost  <ensonic@users.sf.net>

	* FSM/PhatMan/PhatMan.cpp:
	  Comment out leftover printf.

2009-05-07  Stefan Kost  <ensonic@users.sf.net>

	* Jeskola/README:
	  First quick study, what we need to rewrite Jeskola Bass from scratch.

2009-05-06  Stefan Kost  <ensonic@users.sf.net>

	* Jeskola/CrossDelay/CrossDelay.cpp:
	* Jeskola/CrossDelay/Makefile.am:
	* Jeskola/Makefile.am:
	* configure.ac:
	* Jeskola/CrossDelay (added):
	* Jeskola/CrossDelay/Makefile.am (added):
	* Jeskola/CrossDelay/CrossDelay.cpp (added):
	  Rewrite CrossDelay from scratch (no source available).

2009-05-05  Stefan Kost  <ensonic@users.sf.net>

	* Makk/M3/Makefile.am:
	* Makk/M3/Makk_M3.prs:
	* Makk/M4/Makefile.am:
	* Makk/M4/Makk_M4.prs:
	* Makk/M3/Makk_M3.prs (added):
	* Makk/M4/Makk_M4.prs (added):
	  Yes, more presets.

2009-05-05  Stefan Kost  <ensonic@users.sf.net>

	* HACKING:
	  One more error added.

	* Jeskola/Delay/Delay.cpp:
	* Jeskola/Delay/Makefile.am:
	* Jeskola/Makefile.am:
	* configure.ac:
	* Jeskola/Delay/Makefile.am (added):
	  Ported one more.

2009-05-05  Stefan Kost  <ensonic@users.sf.net>

	* CyanPhase/DTMF/Makefile.am:
	  Fix element name.

2009-05-05  Stefan Kost  <ensonic@users.sf.net>

	* Jeskola/Noise/Makefile.am:
	* Jeskola/Noise/Makefile.am (added):
	  Add missing Makefile.am.

2009-05-04  Stefan Kost  <ensonic@users.sf.net>

	* FSM/dspchips/DSPChips.h:
	* Matilde/Tracker/BuzzInstrument.cpp:
	* Matilde/Tracker/BuzzSample.cpp:
	* Matilde/Tracker/SurfsDSPLib/SRF_Amp.h:
	* Matilde/Tracker/Tracker.cpp:
	  Build warning fixes.

2009-05-04  Stefan Kost  <ensonic@users.sf.net>

	* CyanPhase/DTMF/DTMF-1.cpp:
	* CyanPhase/DTMF/Makefile.am:
	* Ensonic/CallbackTester/CallbackTester.cpp:
	* Jeskola/Freeverb/main.cpp:
	* Jeskola/Freeverb/revmodel.cpp:
	* Jeskola/Makefile.am:
	* Jeskola/Ninja/Ninja.cpp:
	* Jeskola/Noise/Noise.cpp:
	* Makk/M3/M3.cpp:
	* Makk/M3/Makefile.am:
	* Makk/M4/M4.cpp:
	* Makk/M4/Makefile.am:
	* common/dsplib/dsplib.cpp:
	  Masssive dsplib usage fix. We nned to call DSP_Init from the plugins Init
	  as we link statically to dsplib right now.
	
	* HACKING:
	  More formatting and tips for porting.

	* configure.ac:
	  Add Jeskola Noise.
	
	* gen_makefile_am.sh:
	  Add LIBADD if plugin uses dsplib or mdk.

2009-05-03  Stefan Kost  <ensonic@users.sf.net>

	* FSM/PhatMan/FSM_PhatMan.prs:
	* FSM/PhatMan/Makefile.am:
	* FSM/PhatMan/FSM_PhatMan.prs (added):
	* FSM/PhatMan/PhatMan.cpp (added):
	* FSM/PhatMan/Chorus.cpp (deleted):
	  Rename cpp and add presets.

	* Jeskola/Freeverb/Makefile.am:
	* Jeskola/Freeverb/revmodel.cpp:
	* common/dsplib/dsplib.cpp:
	* Jeskola/Freeverb/Makefile.am (added):
	  Fix the linker error and add missing Makefile.am

2009-05-02  Stefan Kost  <ensonic@users.sf.net>

	* FSM/PanzerDelay/FSM_PanzerDelay.prs:
	* FSM/PanzerDelay/Makefile.am:
	* FSM/PanzerDelay/FSM_PanzerDelay.prs (added):
	  Add presets.

	* Jeskola/Freeverb/denormals.h:
	* Jeskola/Freeverb/main.cpp:
	* Jeskola/Freeverb/revmodel.cpp:
	* Jeskola/Freeverb/revmodel.h:
	* Jeskola/Makefile.am:
	* configure.ac:
	  It build, but I get "undefined symbol: _Z11DSP_BW_WorkR8CBWStatePfmi"
	  which is DSP_BW_Work(CBWState&, float*, unsigned long, int) at runtime
	  and this is from dsplib :/ 
	  
	* TODO:
	  Plugin docs.

2009-05-02  Stefan Kost  <ensonic@users.sf.net>

	* Jeskola/Ninja/Jeskola_NiNjA_dElaY.prs:
	* Jeskola/Ninja/Makefile.am:
	* Jeskola/Ninja/Jeskola_NiNjA_dElaY.prs (added):
	  Add presets.

2009-05-02  Stefan Kost  <ensonic@users.sf.net>

	* HACKING:
	  Point to example for preset and demo song.

	* common/MachineInterface.h:
	  Make __cdecl__ WIN32 specific. Its kind of superflous and causes compilter
	  warnings on e.g. NetBSD.

	* FSM/Infector/FSM_Infector_Demo.bmx:
	* FSM/Infector/Makefile.am:
	* FSM/Infector/FSM_Infector_Demo.bmx (added):
	* FSM/Kick/FSM_Kick_Demo.bmx:
	* FSM/Kick/Makefile.am:
	* FSM/Kick/FSM_Kick_Demo.bmx (added):
	  Add more demo songs.

2009-04-30  Stefan Kost  <ensonic@users.sf.net>

	* CyanPhase/DTMF/DTMF-1.cpp:
	* CyanPhase/DTMF/Makefile.am:
	* CyanPhase/Makefile.am:
	* Makefile.am:
	* configure.ac:
	* CyanPhase (added):
	* CyanPhase/Makefile.am (added):
	* CyanPhase/DTMF (added):
	* CyanPhase/DTMF/DTMF-1.cpp (added):
	* CyanPhase/DTMF/Makefile.am (added):
	* CyanPhase/DTMF/CyanPhase_DTMF-1_Demo.bmx (added):
	  One more machine ported. This comes with a demo song.


2009-04-30  Stefan Kost  <ensonic@users.sf.net>

	* NEWS:
	  Prepare for pre-releasing.

	* FSM/Infector/FSM_Infector.prs:
	* FSM/Infector/Makefile.am:
	* FSM/Kick/FSM_Kick.prs:
	* FSM/Kick/Makefile.am:
	  Install presets.

	* Matilde/Tracker/Makefile.am:
	  Fix typo.

	* configure.ac:
	  Use date as a version.

2009-04-29  Stefan Kost  <ensonic@users.sf.net>

	* Makefile.am:
	  Add Makk to the SUBDIRS.

2009-04-29  Stefan Kost  <ensonic@users.sf.net>

	* Makk/M4/M4.cpp:
	* Makk/M4/waves/303_01.h:
	* Makk/M4/waves/303_01.wav:
	* Makk/M4/waves/303_02.h:
	* Makk/M4/waves/303_02.wav:
	* Makk/M4/waves/303_03.h:
	* Makk/M4/waves/303_03.wav:
	* Makk/M4/waves/303_04.h:
	* Makk/M4/waves/303_04.wav:
	* Makk/M4/waves/303_05.h:
	* Makk/M4/waves/303_05.wav:
	* Makk/M4/waves/303_06.h:
	* Makk/M4/waves/303_06.wav:
	* Makk/M4/waves/303_07.h:
	* Makk/M4/waves/303_07.wav:
	* Makk/M4/waves/303_08.h:
	* Makk/M4/waves/303_08.wav:
	* Makk/M4/waves/303_09.h:
	* Makk/M4/waves/303_09.wav:
	* Makk/M4/waves/303_10.h:
	* Makk/M4/waves/303_10.wav:
	* Makk/M4/waves/303_11.h:
	* Makk/M4/waves/303_11.wav:
	* Makk/M4/waves/303_12.h:
	* Makk/M4/waves/303_12.wav:
	* Makk/M4/waves/BASS01.h:
	* Makk/M4/waves/BASS02.h:
	* Makk/M4/waves/BASS03.h:
	* Makk/M4/waves/BASS04.h:
	* Makk/M4/waves/BASS05.h:
	* Makk/M4/waves/BASS06.h:
	* Makk/M4/waves/BASS07.h:
	* Makk/M4/waves/BASS08.h:
	* Makk/M4/waves/BASS09.h:
	* Makk/M4/waves/BASS10.h:
	* Makk/M4/waves/BASS11.h:
	* Makk/M4/waves/BASS12.h:
	* Makk/M4/waves/BASS13.h:
	* Makk/M4/waves/BASS14.h:
	* Makk/M4/waves/BASS15.h:
	* Makk/M4/waves/BASS16.h:
	* Makk/M4/waves/BASS17.h:
	* Makk/M4/waves/BASS18.h:
	* Makk/M4/waves/BASS19.h:
	* Makk/M4/waves/Bass01.wav:
	* Makk/M4/waves/Bass02.wav:
	* Makk/M4/waves/Bass03.wav:
	* Makk/M4/waves/Bass04.wav:
	* Makk/M4/waves/Bass05.wav:
	* Makk/M4/waves/Bass06.wav:
	* Makk/M4/waves/Bass07.wav:
	* Makk/M4/waves/Bass08.wav:
	* Makk/M4/waves/Bass09.wav:
	* Makk/M4/waves/Bass10.wav:
	* Makk/M4/waves/Bass11.wav:
	* Makk/M4/waves/Bass12.wav:
	* Makk/M4/waves/Bass13.wav:
	* Makk/M4/waves/Bass14.wav:
	* Makk/M4/waves/Bass15.wav:
	* Makk/M4/waves/Bass16.wav:
	* Makk/M4/waves/Bass17.wav:
	* Makk/M4/waves/Bass18.wav:
	* Makk/M4/waves/Bass19.wav:
	* Makk/M4/waves/Convert.exe:
	* Makk/M4/waves/Dir2c.exe:
	* Makk/M4/waves/HARD01.h:
	* Makk/M4/waves/HARD02.h:
	* Makk/M4/waves/HARD03.h:
	* Makk/M4/waves/HARD04.h:
	* Makk/M4/waves/HARD05.h:
	* Makk/M4/waves/HARD06.h:
	* Makk/M4/waves/HARD07.h:
	* Makk/M4/waves/Hard01.wav:
	* Makk/M4/waves/Hard02.wav:
	* Makk/M4/waves/Hard03.wav:
	* Makk/M4/waves/Hard04.wav:
	* Makk/M4/waves/Hard05.wav:
	* Makk/M4/waves/Hard06.wav:
	* Makk/M4/waves/Hard07.wav:
	* Makk/M4/waves/Raw2h.exe:
	* Makk/M4/waves/SAW01.h:
	* Makk/M4/waves/SAW02.h:
	* Makk/M4/waves/SAW03.h:
	* Makk/M4/waves/SAW04.h:
	* Makk/M4/waves/SAW05.h:
	* Makk/M4/waves/SAW06.h:
	* Makk/M4/waves/SAW07.h:
	* Makk/M4/waves/SAW08.h:
	* Makk/M4/waves/SAW09.h:
	* Makk/M4/waves/SAW10.h:
	* Makk/M4/waves/SAW_202.h:
	* Makk/M4/waves/SAW_DIGI.h:
	* Makk/M4/waves/SAW_MOOG.h:
	* Makk/M4/waves/SAW_SPEK.h:
	* Makk/M4/waves/SIN_DIGI.h:
	* Makk/M4/waves/SMOOTH01.h:
	* Makk/M4/waves/SMOOTH02.h:
	* Makk/M4/waves/SMOOTH03.h:
	* Makk/M4/waves/SMOOTH04.h:
	* Makk/M4/waves/SMOOTH05.h:
	* Makk/M4/waves/SPEK01.h:
	* Makk/M4/waves/SPEK02.h:
	* Makk/M4/waves/SPEK03.h:
	* Makk/M4/waves/SPEK04.h:
	* Makk/M4/waves/SPEK05.h:
	* Makk/M4/waves/SPEK06.h:
	* Makk/M4/waves/SPEK07.h:
	* Makk/M4/waves/SPEK08.h:
	* Makk/M4/waves/SPEK09.h:
	* Makk/M4/waves/SPEK10.h:
	* Makk/M4/waves/SPEK11.h:
	* Makk/M4/waves/SPEK12.h:
	* Makk/M4/waves/SQUARE01.h:
	* Makk/M4/waves/SQUARE02.h:
	* Makk/M4/waves/SQUARE03.h:
	* Makk/M4/waves/SQUARE04.h:
	* Makk/M4/waves/SQUARE05.h:
	* Makk/M4/waves/SQUARE06.h:
	* Makk/M4/waves/SQUARE07.h:
	* Makk/M4/waves/SQUARE08.h:
	* Makk/M4/waves/SQUARE09.h:
	* Makk/M4/waves/SQUARE10.h:
	* Makk/M4/waves/SQUA_DIG.h:
	* Makk/M4/waves/SQUA_SPK.h:
	* Makk/M4/waves/SYNTH01.h:
	* Makk/M4/waves/SYNTH02.h:
	* Makk/M4/waves/SYNTH03.h:
	* Makk/M4/waves/SYNTH04.h:
	* Makk/M4/waves/SYNTH05.h:
	* Makk/M4/waves/SYNTH06.h:
	* Makk/M4/waves/SYNTH07.h:
	* Makk/M4/waves/SYNTH08.h:
	* Makk/M4/waves/SYNTH09.h:
	* Makk/M4/waves/SYNTH10.h:
	* Makk/M4/waves/SYNTH11.h:
	* Makk/M4/waves/SYNTH12.h:
	* Makk/M4/waves/SYNTH13.h:
	* Makk/M4/waves/SYNTH14.h:
	* Makk/M4/waves/SYNTH15.h:
	* Makk/M4/waves/SYNTH16.h:
	* Makk/M4/waves/SYNTH17.h:
	* Makk/M4/waves/SYNTH18.h:
	* Makk/M4/waves/SYNTH19.h:
	* Makk/M4/waves/SYNTH20.h:
	* Makk/M4/waves/SYNTH21.h:
	* Makk/M4/waves/SYNTH22.h:
	* Makk/M4/waves/SYNTH23.h:
	* Makk/M4/waves/SYNTH24.h:
	* Makk/M4/waves/SYNTH25.h:
	* Makk/M4/waves/SYNTH26.h:
	* Makk/M4/waves/SYNTH27.h:
	* Makk/M4/waves/SYNTH28.h:
	* Makk/M4/waves/SYNTH29.h:
	* Makk/M4/waves/SYNTH30.h:
	* Makk/M4/waves/SYNTH31.h:
	* Makk/M4/waves/SYNTH32.h:
	* Makk/M4/waves/SYNTH33.h:
	* Makk/M4/waves/SYNTH34.h:
	* Makk/M4/waves/SYNTH35.h:
	* Makk/M4/waves/SYNTH36.h:
	* Makk/M4/waves/SYNTH37.h:
	* Makk/M4/waves/SYNTH38.h:
	* Makk/M4/waves/SYNTH39.h:
	* Makk/M4/waves/SYNTH40.h:
	* Makk/M4/waves/SYNTH41.h:
	* Makk/M4/waves/Saw01.wav:
	* Makk/M4/waves/Saw02.wav:
	* Makk/M4/waves/Saw03.wav:
	* Makk/M4/waves/Saw04.wav:
	* Makk/M4/waves/Saw05.wav:
	* Makk/M4/waves/Saw06.wav:
	* Makk/M4/waves/Saw07.wav:
	* Makk/M4/waves/Saw08.wav:
	* Makk/M4/waves/Saw09.wav:
	* Makk/M4/waves/Saw10.wav:
	* Makk/M4/waves/Saw_202.wav:
	* Makk/M4/waves/Saw_digi.wav:
	* Makk/M4/waves/Saw_moog.wav:
	* Makk/M4/waves/Saw_spek.wav:
	* Makk/M4/waves/Sin_digi.wav:
	* Makk/M4/waves/Smooth01.wav:
	* Makk/M4/waves/Smooth02.wav:
	* Makk/M4/waves/Smooth03.wav:
	* Makk/M4/waves/Smooth04.wav:
	* Makk/M4/waves/Smooth05.wav:
	* Makk/M4/waves/Spek01.wav:
	* Makk/M4/waves/Spek02.wav:
	* Makk/M4/waves/Spek03.wav:
	* Makk/M4/waves/Spek04.wav:
	* Makk/M4/waves/Spek05.wav:
	* Makk/M4/waves/Spek06.wav:
	* Makk/M4/waves/Spek07.wav:
	* Makk/M4/waves/Spek08.wav:
	* Makk/M4/waves/Spek09.wav:
	* Makk/M4/waves/Spek10.wav:
	* Makk/M4/waves/Spek11.wav:
	* Makk/M4/waves/Spek12.wav:
	* Makk/M4/waves/Squa_dig.wav:
	* Makk/M4/waves/Squa_spk.wav:
	* Makk/M4/waves/Square01.wav:
	* Makk/M4/waves/Square02.wav:
	* Makk/M4/waves/Square03.wav:
	* Makk/M4/waves/Square04.wav:
	* Makk/M4/waves/Square05.wav:
	* Makk/M4/waves/Square06.wav:
	* Makk/M4/waves/Square07.wav:
	* Makk/M4/waves/Square08.wav:
	* Makk/M4/waves/Square09.wav:
	* Makk/M4/waves/Square10.wav:
	* Makk/M4/waves/Synth01.wav:
	* Makk/M4/waves/Synth02.wav:
	* Makk/M4/waves/Synth03.wav:
	* Makk/M4/waves/Synth04.wav:
	* Makk/M4/waves/Synth05.wav:
	* Makk/M4/waves/Synth06.wav:
	* Makk/M4/waves/Synth07.wav:
	* Makk/M4/waves/Synth08.wav:
	* Makk/M4/waves/Synth09.wav:
	* Makk/M4/waves/Synth10.wav:
	* Makk/M4/waves/Synth11.wav:
	* Makk/M4/waves/Synth12.wav:
	* Makk/M4/waves/Synth13.wav:
	* Makk/M4/waves/Synth14.wav:
	* Makk/M4/waves/Synth15.wav:
	* Makk/M4/waves/Synth16.wav:
	* Makk/M4/waves/Synth17.wav:
	* Makk/M4/waves/Synth18.wav:
	* Makk/M4/waves/Synth19.wav:
	* Makk/M4/waves/Synth20.wav:
	* Makk/M4/waves/Synth21.wav:
	* Makk/M4/waves/Synth22.wav:
	* Makk/M4/waves/Synth23.wav:
	* Makk/M4/waves/Synth24.wav:
	* Makk/M4/waves/Synth25.wav:
	* Makk/M4/waves/Synth26.wav:
	* Makk/M4/waves/Synth27.wav:
	* Makk/M4/waves/Synth28.wav:
	* Makk/M4/waves/Synth29.wav:
	* Makk/M4/waves/Synth30.wav:
	* Makk/M4/waves/Synth31.wav:
	* Makk/M4/waves/Synth32.wav:
	* Makk/M4/waves/Synth33.wav:
	* Makk/M4/waves/Synth34.wav:
	* Makk/M4/waves/Synth35.wav:
	* Makk/M4/waves/Synth36.wav:
	* Makk/M4/waves/Synth37.wav:
	* Makk/M4/waves/Synth38.wav:
	* Makk/M4/waves/Synth39.wav:
	* Makk/M4/waves/Synth40.wav:
	* Makk/M4/waves/Synth41.wav:
	* Makk/M4/waves/TRI01.h:
	* Makk/M4/waves/TRI02.h:
	* Makk/M4/waves/TRI_DIGI.h:
	* Makk/M4/waves/Tri01.wav:
	* Makk/M4/waves/Tri02.wav:
	* Makk/M4/waves/Tri_digi.wav:
	* Makk/M4/waves/Wav2h.bat:
	* Makk/M4/waves/wav2h.sh:
	* Makk/M4/waves/wavename.inc:
	* Makk/M4/waves/waves.cpp:
	* Makk/Makefile.am:
	* TODO:
	* Makk/M4/waves (added):
	* Makk/M4/waves/BASS01.h (added):
	* Makk/M4/waves/Tri_digi.wav (added):
	* Makk/M4/waves/SQUARE01.h (added):
	* Makk/M4/waves/BASS09.h (added):
	* Makk/M4/waves/SAW08.h (added):
	* Makk/M4/waves/303_10.h (added):
	* Makk/M4/waves/SPEK12.h (added):
	* Makk/M4/waves/SQUARE09.h (added):
	* Makk/M4/waves/SMOOTH01.h (added):
	* Makk/M4/waves/SYNTH33.h (added):
	* Makk/M4/waves/Spek03.wav (added):
	* Makk/M4/waves/SYNTH16.h (added):
	* Makk/M4/waves/Raw2h.exe (added):
	* Makk/M4/waves/Synth12.wav (added):
	* Makk/M4/waves/Spek07.wav (added):
	* Makk/M4/waves/Synth16.wav (added):
	* Makk/M4/waves/HARD05.h (added):
	* Makk/M4/waves/BASS10.h (added):
	* Makk/M4/waves/Bass03.wav (added):
	* Makk/M4/waves/SQUARE10.h (added):
	* Makk/M4/waves/BASS18.h (added):
	* Makk/M4/waves/Bass07.wav (added):
	* Makk/M4/waves/SPEK04.h (added):
	* Makk/M4/waves/303_02.h (added):
	* Makk/M4/waves/Spek12.wav (added):
	* Makk/M4/waves/SYNTH25.h (added):
	* Makk/M4/waves/303_02.wav (added):
	* Makk/M4/waves/SYNTH08.h (added):
	* Makk/M4/waves/SAW_202.h (added):
	* Makk/M4/waves/Synth21.wav (added):
	* Makk/M4/waves/303_06.wav (added):
	* Makk/M4/waves/Smooth02.wav (added):
	* Makk/M4/waves/Synth25.wav (added):
	* Makk/M4/waves/Saw_202.wav (added):
	* Makk/M4/waves/wavename.inc (added):
	* Makk/M4/waves/Hard02.wav (added):
	* Makk/M4/waves/Synth29.wav (added):
	* Makk/M4/waves/BASS02.h (added):
	* Makk/M4/waves/Hard06.wav (added):
	* Makk/M4/waves/TRI_DIGI.h (added):
	* Makk/M4/waves/SAW01.h (added):
	* Makk/M4/waves/Bass12.wav (added):
	* Makk/M4/waves/SQUARE02.h (added):
	* Makk/M4/waves/Saw02.wav (added):
	* Makk/M4/waves/SAW09.h (added):
	* Makk/M4/waves/Bass16.wav (added):
	* Makk/M4/waves/303_11.h (added):
	* Makk/M4/waves/Saw06.wav (added):
	* Makk/M4/waves/SMOOTH02.h (added):
	* Makk/M4/waves/SYNTH34.h (added):
	* Makk/M4/waves/303_11.wav (added):
	* Makk/M4/waves/SYNTH17.h (added):
	* Makk/M4/waves/Synth30.wav (added):
	* Makk/M4/waves/Synth34.wav (added):
	* Makk/M4/waves/HARD06.h (added):
	* Makk/M4/waves/Synth38.wav (added):
	* Makk/M4/waves/SAW_DIGI.h (added):
	* Makk/M4/waves/BASS11.h (added):
	* Makk/M4/waves/SAW10.h (added):
	* Makk/M4/waves/BASS19.h (added):
	* Makk/M4/waves/SYNTH01.h (added):
	* Makk/M4/waves/SPEK05.h (added):
	* Makk/M4/waves/303_03.h (added):
	* Makk/M4/waves/Square03.wav (added):
	* Makk/M4/waves/Square07.wav (added):
	* Makk/M4/waves/SYNTH26.h (added):
	* Makk/M4/waves/SYNTH09.h (added):
	* Makk/M4/waves/Synth04.wav (added):
	* Makk/M4/waves/Synth08.wav (added):
	* Makk/M4/waves/SIN_DIGI.h (added):
	* Makk/M4/waves/BASS03.h (added):
	* Makk/M4/waves/SAW02.h (added):
	* Makk/M4/waves/SQUARE03.h (added):
	* Makk/M4/waves/SYNTH10.h (added):
	* Makk/M4/waves/303_12.h (added):
	* Makk/M4/waves/Spek04.wav (added):
	* Makk/M4/waves/SMOOTH03.h (added):
	* Makk/M4/waves/SYNTH35.h (added):
	* Makk/M4/waves/SYNTH18.h (added):
	* Makk/M4/waves/Synth13.wav (added):
	* Makk/M4/waves/waves.cpp (added):
	* Makk/M4/waves/Spek08.wav (added):
	* Makk/M4/waves/Synth17.wav (added):
	* Makk/M4/waves/HARD07.h (added):
	* Makk/M4/waves/BASS12.h (added):
	* Makk/M4/waves/TRI01.h (added):
	* Makk/M4/waves/Bass04.wav (added):
	* Makk/M4/waves/Wav2h.bat (added):
	* Makk/M4/waves/Bass08.wav (added):
	* Makk/M4/waves/SYNTH02.h (added):
	* Makk/M4/waves/SPEK06.h (added):
	* Makk/M4/waves/303_04.h (added):
	* Makk/M4/waves/Convert.exe (added):
	* Makk/M4/waves/303_03.wav (added):
	* Makk/M4/waves/SYNTH27.h (added):
	* Makk/M4/waves/Synth22.wav (added):
	* Makk/M4/waves/303_07.wav (added):
	* Makk/M4/waves/Smooth03.wav (added):
	* Makk/M4/waves/Synth26.wav (added):
	* Makk/M4/waves/Hard03.wav (added):
	* Makk/M4/waves/Hard07.wav (added):
	* Makk/M4/waves/Squa_spk.wav (added):
	* Makk/M4/waves/BASS04.h (added):
	* Makk/M4/waves/SQUA_DIG.h (added):
	* Makk/M4/waves/SAW03.h (added):
	* Makk/M4/waves/Dir2c.exe (added):
	* Makk/M4/waves/Bass13.wav (added):
	* Makk/M4/waves/Saw03.wav (added):
	* Makk/M4/waves/SQUARE04.h (added):
	* Makk/M4/waves/Bass17.wav (added):
	* Makk/M4/waves/Saw07.wav (added):
	* Makk/M4/waves/SYNTH11.h (added):
	* Makk/M4/waves/303_12.wav (added):
	* Makk/M4/waves/SMOOTH04.h (added):
	* Makk/M4/waves/SYNTH36.h (added):
	* Makk/M4/waves/Synth31.wav (added):
	* Makk/M4/waves/SYNTH19.h (added):
	* Makk/M4/waves/Synth35.wav (added):
	* Makk/M4/waves/Synth39.wav (added):
	* Makk/M4/waves/BASS13.h (added):
	* Makk/M4/waves/TRI02.h (added):
	* Makk/M4/waves/SYNTH20.h (added):
	* Makk/M4/waves/SYNTH03.h (added):
	* Makk/M4/waves/SPEK07.h (added):
	* Makk/M4/waves/303_05.h (added):
	* Makk/M4/waves/Square04.wav (added):
	* Makk/M4/waves/Synth01.wav (added):
	* Makk/M4/waves/Square08.wav (added):
	* Makk/M4/waves/SYNTH28.h (added):
	* Makk/M4/waves/Synth40.wav (added):
	* Makk/M4/waves/Synth05.wav (added):
	* Makk/M4/waves/Synth09.wav (added):
	* Makk/M4/waves/Sin_digi.wav (added):
	* Makk/M4/waves/BASS05.h (added):
	* Makk/M4/waves/SAW04.h (added):
	* Makk/M4/waves/Squa_dig.wav (added):
	* Makk/M4/waves/SQUARE05.h (added):
	* Makk/M4/waves/SYNTH12.h (added):
	* Makk/M4/waves/Spek01.wav (added):
	* Makk/M4/waves/Synth10.wav (added):
	* Makk/M4/waves/SAW_SPEK.h (added):
	* Makk/M4/waves/Spek05.wav (added):
	* Makk/M4/waves/SMOOTH05.h (added):
	* Makk/M4/waves/SYNTH37.h (added):
	* Makk/M4/waves/HARD01.h (added):
	* Makk/M4/waves/Synth14.wav (added):
	* Makk/M4/waves/Spek09.wav (added):
	* Makk/M4/waves/Synth18.wav (added):
	* Makk/M4/waves/Saw_digi.wav (added):
	* Makk/M4/waves/BASS14.h (added):
	* Makk/M4/waves/Bass01.wav (added):
	* Makk/M4/waves/Bass05.wav (added):
	* Makk/M4/waves/Tri01.wav (added):
	* Makk/M4/waves/Bass09.wav (added):
	* Makk/M4/waves/SYNTH21.h (added):
	* Makk/M4/waves/SYNTH04.h (added):
	* Makk/M4/waves/Spek10.wav (added):
	* Makk/M4/waves/303_06.h (added):
	* Makk/M4/waves/SPEK08.h (added):
	* Makk/M4/waves/303_04.wav (added):
	* Makk/M4/waves/SYNTH29.h (added):
	* Makk/M4/waves/Synth23.wav (added):
	* Makk/M4/waves/303_08.wav (added):
	* Makk/M4/waves/Smooth04.wav (added):
	* Makk/M4/waves/Synth27.wav (added):
	* Makk/M4/waves/Hard04.wav (added):
	* Makk/M4/waves/BASS06.h (added):
	* Makk/M4/waves/Bass10.wav (added):
	* Makk/M4/waves/SAW05.h (added):
	* Makk/M4/waves/Bass14.wav (added):
	* Makk/M4/waves/Saw04.wav (added):
	* Makk/M4/waves/SQUARE06.h (added):
	* Makk/M4/waves/Bass18.wav (added):
	* Makk/M4/waves/Saw08.wav (added):
	* Makk/M4/waves/SYNTH30.h (added):
	* Makk/M4/waves/SYNTH13.h (added):
	* Makk/M4/waves/Synth32.wav (added):
	* Makk/M4/waves/HARD02.h (added):
	* Makk/M4/waves/SYNTH38.h (added):
	* Makk/M4/waves/Saw_spek.wav (added):
	* Makk/M4/waves/Synth36.wav (added):
	* Makk/M4/waves/BASS15.h (added):
	* Makk/M4/waves/SPEK01.h (added):
	* Makk/M4/waves/Square01.wav (added):
	* Makk/M4/waves/SYNTH22.h (added):
	* Makk/M4/waves/wav2h.sh (added):
	* Makk/M4/waves/SYNTH05.h (added):
	* Makk/M4/waves/SPEK09.h (added):
	* Makk/M4/waves/303_07.h (added):
	* Makk/M4/waves/Square05.wav (added):
	* Makk/M4/waves/Synth02.wav (added):
	* Makk/M4/waves/Square09.wav (added):
	* Makk/M4/waves/Synth41.wav (added):
	* Makk/M4/waves/Synth06.wav (added):
	* Makk/M4/waves/BASS07.h (added):
	* Makk/M4/waves/SAW06.h (added):
	* Makk/M4/waves/SPEK10.h (added):
	* Makk/M4/waves/SQUARE07.h (added):
	* Makk/M4/waves/Square10.wav (added):
	* Makk/M4/waves/SYNTH31.h (added):
	* Makk/M4/waves/SYNTH14.h (added):
	* Makk/M4/waves/Spek02.wav (added):
	* Makk/M4/waves/SAW_MOOG.h (added):
	* Makk/M4/waves/Synth11.wav (added):
	* Makk/M4/waves/Spek06.wav (added):
	* Makk/M4/waves/SYNTH39.h (added):
	* Makk/M4/waves/HARD03.h (added):
	* Makk/M4/waves/Saw_moog.wav (added):
	* Makk/M4/waves/Synth15.wav (added):
	* Makk/M4/waves/Synth19.wav (added):
	* Makk/M4/waves/BASS16.h (added):
	* Makk/M4/waves/Bass02.wav (added):
	* Makk/M4/waves/Bass06.wav (added):
	* Makk/M4/waves/SPEK02.h (added):
	* Makk/M4/waves/Tri02.wav (added):
	* Makk/M4/waves/SYNTH40.h (added):
	* Makk/M4/waves/SYNTH23.h (added):
	* Makk/M4/waves/Spek11.wav (added):
	* Makk/M4/waves/SYNTH06.h (added):
	* Makk/M4/waves/303_01.wav (added):
	* Makk/M4/waves/303_08.h (added):
	* Makk/M4/waves/Synth20.wav (added):
	* Makk/M4/waves/303_05.wav (added):
	* Makk/M4/waves/Smooth01.wav (added):
	* Makk/M4/waves/Synth24.wav (added):
	* Makk/M4/waves/303_09.wav (added):
	* Makk/M4/waves/Smooth05.wav (added):
	* Makk/M4/waves/Hard01.wav (added):
	* Makk/M4/waves/Synth28.wav (added):
	* Makk/M4/waves/Hard05.wav (added):
	* Makk/M4/waves/Bass11.wav (added):
	* Makk/M4/waves/BASS08.h (added):
	* Makk/M4/waves/SAW07.h (added):
	* Makk/M4/waves/Saw01.wav (added):
	* Makk/M4/waves/SPEK11.h (added):
	* Makk/M4/waves/Bass15.wav (added):
	* Makk/M4/waves/Saw05.wav (added):
	* Makk/M4/waves/SQUARE08.h (added):
	* Makk/M4/waves/Bass19.wav (added):
	* Makk/M4/waves/Saw09.wav (added):
	* Makk/M4/waves/SYNTH32.h (added):
	* Makk/M4/waves/SYNTH15.h (added):
	* Makk/M4/waves/303_10.wav (added):
	* Makk/M4/waves/Synth33.wav (added):
	* Makk/M4/waves/HARD04.h (added):
	* Makk/M4/waves/Synth37.wav (added):
	* Makk/M4/waves/BASS17.h (added):
	* Makk/M4/waves/Saw10.wav (added):
	* Makk/M4/waves/303_01.h (added):
	* Makk/M4/waves/SPEK03.h (added):
	* Makk/M4/waves/Square02.wav (added):
	* Makk/M4/waves/SYNTH41.h (added):
	* Makk/M4/waves/SYNTH24.h (added):
	* Makk/M4/waves/SYNTH07.h (added):
	* Makk/M4/waves/Square06.wav (added):
	* Makk/M4/waves/303_09.h (added):
	* Makk/M4/waves/Synth03.wav (added):
	* Makk/M4/waves/Synth07.wav (added):
	* Makk/M4/waves/SQUA_SPK.h (added):
	  Ported Makk M4.

2009-04-27  Stefan Kost  <ensonic@users.sf.net>

	* Matilde/Tracker/Makefile.am:
	  Fix "commands commence before first target." in Makefile.

2009-04-27  Stefan Kost  <ensonic@users.sf.net>

	* Matilde/Tracker/Makefile.am:
	  Remove TODO and add missing whitespace.

2009-04-27  Stefan Kost  <ensonic@users.sf.net>

	* README:
	  Update to mention the machines are to be used via bml+gst-buzztard.

2009-04-26  Stefan Kost  <ensonic@users.sf.net>

	* Jeskola/Ninja/Ninja.cpp:
	  Use relative includes.

	* Makk/M3/M3.cpp:
	* Makk/M3/Makefile.am:
	* Makk/M4/M4.cpp:
	* Makk/M4/Makefile.am:
	* Makk/Makefile.am:
	* configure.ac:
	* Makk (added):
	* Makk/M3 (added):
	* Makk/M3/M3.cpp (added):
	* Makk/M3/Makefile.am (added):
	* Makk/M4 (added):
	* Makk/M4/M4.cpp (added):
	* Makk/M4/Makefile.am (added):
	* Makk/Makefile.am (added):
	  Port M3 and almost M4. For M4 we need to port 2 tools to build the
	  wavetable tools still.

2009-04-26  Stefan Kost  <ensonic@users.sf.net>

	* HACKING:
	* gen_makefile_am.sh:
	* gen_makefile_am.sh (added):
	  More tips in HACKING. Add script to generate Makefile.am for a machine.

	* Jeskola/Makefile.am:
	* Jeskola/Trilok/Makefile.am:
	* Jeskola/Trilok/Trilok.cpp:
	* configure.ac:
	* Jeskola/Trilok/Makefile.am (added):
	  Port Trilok.

2009-04-26  Stefan Kost  <ensonic@users.sf.net>

	* Elak/Dist2/Makefile.am:
	* Elak/SVF/Makefile.am:
	* FSM/ArpMan/Makefile.am:
	* FSM/Chorus/Makefile.am:
	* FSM/Chorus2/Makefile.am:
	* FSM/Infector/Makefile.am:
	* FSM/PanzerDelay/Makefile.am:
	* FSM/PhatMan/Makefile.am:
	* FSM/WahMan/Makefile.am:
	* common/mdk/Makefile.am:
	  Fix ID tokens

2009-04-25  Stefan Kost  <ensonic@users.sf.net>

	* HACKING:
	  More howto info.

2009-04-25  Stefan Kost  <ensonic@users.sf.net>

	* FSM/Makefile.am:
	* FSM/Philta/Philta.cpp:
	* FSM/ScatMan/ScatMan.cpp:
	* FSM/ScrapMan/ScrapMan.cpp:
	* FSM/SprayMan/SprayMan.cpp:
	* FSM/TapMan/TapMan.cpp:
	* FSM/TunaMan/TunaMan.cpp:
	* FSM/WahManPro/WahManPro.cpp:
	* FSM/TapMan (added):
	* FSM/TapMan/TapMan.cpp (added):
	* FSM/Philta (added):
	* FSM/Philta/Philta.cpp (added):
	* FSM/ScatMan (added):
	* FSM/ScatMan/ScatMan.cpp (added):
	* FSM/SprayMan (added):
	* FSM/SprayMan/SprayMan.cpp (added):
	* FSM/WahManPro (added):
	* FSM/WahManPro/WahManPro.cpp (added):
	* FSM/TunaMan (added):
	* FSM/TunaMan/TunaMan.cpp (added):
	* FSM/ScrapMan (added):
	* FSM/ScrapMan/ScrapMan.cpp (added):
	  Add unported FSM machines.

2009-04-25  Stefan Kost  <ensonic@users.sf.net>

	* Jeskola/Delay/Delay.cpp:
	* Jeskola/Distortion/Distortion.cpp:
	* Jeskola/Freeverb/allpass.cpp:
	* Jeskola/Freeverb/allpass.h:
	* Jeskola/Freeverb/comb.cpp:
	* Jeskola/Freeverb/comb.h:
	* Jeskola/Freeverb/denormals.h:
	* Jeskola/Freeverb/main.cpp:
	* Jeskola/Freeverb/main.h:
	* Jeskola/Freeverb/revmodel.cpp:
	* Jeskola/Freeverb/revmodel.h:
	* Jeskola/Freeverb/tuning.h:
	* Jeskola/Mul/Mul.cpp:
	* Jeskola/Noise/Noise.cpp:
	* Jeskola/Trilok/Trilok.cpp:
	* Jeskola/Freeverb (added):
	* Jeskola/Freeverb/allpass.cpp (added):
	* Jeskola/Freeverb/comb.cpp (added):
	* Jeskola/Freeverb/revmodel.h (added):
	* Jeskola/Freeverb/main.cpp (added):
	* Jeskola/Freeverb/allpass.h (added):
	* Jeskola/Freeverb/comb.h (added):
	* Jeskola/Freeverb/denormals.h (added):
	* Jeskola/Freeverb/main.h (added):
	* Jeskola/Freeverb/tuning.h (added):
	* Jeskola/Freeverb/revmodel.cpp (added):
	* Jeskola/Trilok (added):
	* Jeskola/Trilok/Trilok.cpp (added):
	* Jeskola/Noise (added):
	* Jeskola/Noise/Noise.cpp (added):
	* Jeskola/Mul (added):
	* Jeskola/Mul/Mul.cpp (added):
	* Jeskola/Delay (added):
	* Jeskola/Delay/Delay.cpp (added):
	* Jeskola/Distortion (added):
	* Jeskola/Distortion/Distortion.cpp (added):
	  Add unported Jeskola machines.

2009-04-25  Stefan Kost  <ensonic@users.sf.net>

	* FSM/Kick/Kick.cpp:
	* FSM/PanzerDelay/Makefile.am:
	* FSM/PanzerDelay/PanzerDelay.cpp (added):
	* FSM/PanzerDelay/Delay.cpp (deleted):
	  Renamings.

2009-04-19  Stefan Kost  <ensonic@users.sf.net>

	* Matilde/Tracker/Tracker.cpp:
	  Emulate V1 API.

2009-04-18  Krzysztof Foltman  <kfoltman@users.sf.net>

	* Matilde/Tracker/SurfsDSPLib/SRF_Resampler.cpp:
	* Matilde/Tracker/Tracker.cpp:
	  Unbreak and re-enable Matilde's spline interpolation mode by
	  replacing a floating point hack with plain multiplication.

2009-04-17  Stefan Kost  <ensonic@users.sf.net>

	* Matilde/Tracker/Makefile.am:
	  Build api version 1 and 2 (its still the same, need to make the changes).

	* Matilde/Tracker/SurfsDSPLib/Makefile.am:
	  Add -DBUZZ for more resampler variants.

	* Matilde/Tracker/Track.cpp:
	* Matilde/Tracker/Tracker.cpp:
	  Set interpolation mode to linear by default until spline is fixed.
	
	* common/MachineInterface.h:
	  Comments.

2009-04-05  Stefan Kost  <ensonic@users.sf.net>

	* Ensonic/CallbackTester/Makefile.am:
	* Matilde/Tracker/Makefile.am:
	  Link against dsplib. Fixes #2724592

2009-04-05  Stefan Kost  <ensonic@users.sf.net>

	* Matilde/Tracker/Envelope.h:
	* Matilde/Tracker/SurfsDSPLib/SRF_Amp.cpp:
	* Matilde/Tracker/SurfsDSPLib/SRF_Resampler.cpp:
	  Fix compiler warnings here too.

2009-04-05  Krzysztof Foltman  <kfoltman@users.sf.net>

	* FSM/PanzerDelay/Delay.cpp:
	* FSM/WahMan/WahMan.cpp:
	  Clean up, fix a potentially huge bug in PanzerDelay.

2009-04-05  Krzysztof Foltman  <kfoltman@users.sf.net>

	* FSM/Infector/Infector.cpp:
	* FSM/Infector/Vegetable.cpp:
	* FSM/Kick/Kick.cpp:
	  Clean up a bit.

2009-04-05  Stefan Kost  <ensonic@users.sf.net>

	* configure.ac:
	  Add --enable-debug which is a kind of "developer-mode". Among other things
	  it turns compile warnings into errors.

	* FSM/ArpMan/ArpMan.cpp:
	* FSM/Chorus/Chorus.cpp:
	* FSM/Chorus2/Chorus2.cpp:
	* FSM/Infector/Filters.cpp:
	* FSM/dspchips/DSPChips.h:
	* common/dsplib/dsplib.cpp:
	  Fix a first batch of warnings.

2009-03-13  Stefan Kost  <ensonic@users.sf.net>

	* FSM/Kick/Kick.cpp:
	* FSM/PanzerDelay/Delay.cpp:
	  Don't access uninitialized values.

2009-02-25  Stefan Kost  <ensonic@users.sf.net>

	* Makefile.am:
	* autogen.sh:
	* common/dsplib.h:
	* m4/shave.m4:
	* shave-libtool.in:
	* shave.in:
	  Update shave.

2009-02-20  Stefan Kost  <ensonic@users.sf.net>

	* configure.ac:
	* m4/shave.m4:
	* shave-libtool.in:
	* shave.in:
	* m4/shave.m4 (added):
	* shave.in (added):
	* shave-libtool.in (added):
	  Have a less verbose build.

2009-02-18  Stefan Kost  <ensonic@users.sf.net>

	* README:
	  More instructions.

	* configure.ac:
	  Strip newline.

2009-01-13  Krzysztof Foltman  <kfoltman@users.sf.net>

	* FSM/Makefile.am:
	* FSM/WahMan:
	* FSM/WahMan/Makefile.am:
	* FSM/WahMan/WahMan.cpp:
	* FSM/dspchips/DSPChips.h:
	* configure.ac:
	  Add ported WahMan.

2008-12-30  Stefan Kost  <ensonic@users.sf.net>

	* Makefile.am:
	* autogen.sh:
	* configure.ac:
	* m4 (added):
	  Make use of a macro dir.

2008-12-27  Stefan Kost  <ensonic@users.sf.net>

	* configure.ac:
	  Use more automake features.

2008-12-26  Stefan Kost  <ensonic@users.sf.net>

	* HACKING:
	  Add more info.

	* configure.ac:
	  Run 'autoupdate' on configure.ac.

2008-12-08  Stefan Kost  <ensonic@users.sf.net>

	* README:
	* TODO:
	* autogen.sh:
	* configure.ac:
	  Clean up configure.

2008-12-07  Stefan Kost  <ensonic@users.sf.net>

	* Matilde/Tracker/Makefile.am:
	  Build mono variant too.

	* TODO:
	  Proper locations for data files.

2008-12-07  Stefan Kost  <ensonic@users.sf.net>

	* Matilde/Makefile.am:
	  Add missing Makefile.

2008-12-07  Stefan Kost  <ensonic@users.sf.net>

	* HACKING:
	  Takes porting notes.

	* TODO:
	  Next steps.

	* Makefile.am:
	* Matilde/Tracker/BuzzInstrument.cpp:
	* Matilde/Tracker/BuzzInstrument.h:
	* Matilde/Tracker/BuzzSample.cpp:
	* Matilde/Tracker/BuzzSample.h:
	* Matilde/Tracker/Channel.cpp:
	* Matilde/Tracker/Channel.h:
	* Matilde/Tracker/Envelope.cpp:
	* Matilde/Tracker/Envelope.h:
	* Matilde/Tracker/ExtResampler.cpp:
	* Matilde/Tracker/ExtResampler.h:
	* Matilde/Tracker/IInstrument.cpp:
	* Matilde/Tracker/IInstrument.h:
	* Matilde/Tracker/ISample.cpp:
	* Matilde/Tracker/ISample.h:
	* Matilde/Tracker/Makefile.am:
	* Matilde/Tracker/SurfsDSPLib/Makefile.am:
	* Matilde/Tracker/SurfsDSPLib/SRF_2PFilter.cpp:
	* Matilde/Tracker/SurfsDSPLib/SRF_2PFilter.h:
	* Matilde/Tracker/SurfsDSPLib/SRF_Amp.cpp:
	* Matilde/Tracker/SurfsDSPLib/SRF_Amp.h:
	* Matilde/Tracker/SurfsDSPLib/SRF_AutoGain.cpp:
	* Matilde/Tracker/SurfsDSPLib/SRF_DSP.cpp:
	* Matilde/Tracker/SurfsDSPLib/SRF_DSP.h:
	* Matilde/Tracker/SurfsDSPLib/SRF_Resampler.cpp:
	* Matilde/Tracker/SurfsDSPLib/SRF_Resampler.h:
	* Matilde/Tracker/SurfsDSPLib/SRF_Types.h:
	* Matilde/Tracker/Track.cpp:
	* Matilde/Tracker/Track.h:
	* Matilde/Tracker/Tracker.cpp:
	* Matilde/Tracker/Tracker.h:
	* Matilde/Tracker/WavetableManager.cpp:
	* Matilde/Tracker/WavetableManager.h:
	* Matilde/Tracker/resource.h:
	* Matilde/Tracker/to-do.txt:
	* common/dsplib/Makefile.am:
	* configure.ac:
	  Port Matilde-Tracker. Resampler sounds fishy. Need build stuff for mono
	  variant.

2008-11-11  Krzysztof Foltman  <kfoltman@users.sf.net>

	* FSM/PanzerDelay/Delay.cpp:
	  fix initialization order bug causing valgrind warnings

2008-11-11  Stefan Kost  <ensonic@users.sf.net>

	* Ensonic/CallbackTester/CallbackTester.cpp:
	  Remove some debug output.

2008-08-31  Stefan Kost  <ensonic@users.sf.net>

	* FSM/Chorus2/Chorus2.cpp:
	  Rename more.

	* FSM/Makefile.am:
	  Build both.
	  

2008-08-31  Stefan Kost  <ensonic@users.sf.net>

	* FSM/Chorus/Chorus.cpp:
	* FSM/Chorus2/Makefile.am:
	* FSM/Chorus2/Chorus.cpp:
	* FSM/Chorus2/Chorus2.cpp:
	  Add original Chorus and rename new to Chorus2.

2008-06-23  Krzysztof Foltman  <kfoltman@users.sf.net>

	* common/dsplib.h:
	  Change calling convention so that function arguments are
	  passed correctly.

2008-06-22  Stefan Kost  <ensonic@users.sf.net>

	* configure.ac:
	* common/dsplib/dsplib.cpp:
	* common/dsplib/Makefile.am:
	* Jeskola/Ninja/Ninja.cpp:
	  Readd dsplib. Statically link it to Ninja.

2008-06-03  Krzysztof Foltman  <kfoltman@users.sf.net>

	* FSM/Infector/Infector.cpp:
	* FSM/Infector/Vegetable.cpp:
	* FSM/dspchips/DSPChips.h:
	  Fix Infector crash bug, add assertion to check if waves were built
	  at all.

2008-05-11  Stefan Kost  <ensonic@users.sf.net>

	* Ensonic/CallbackTester/CallbackTester.cpp:
	* Ensonic/CallbackTester/Makefile.am:
	* Ensonic/Makefile.am:
	* Makefile.am:
	* configure.ac:
	  Add test plugin.

	* FSM/Kick/Makefile.am:
	  Fix Makefile
	
	* common/bw.h:
	* common/dsplib.h:
	* common/resample.h:
	  Add more sdk files.

2008-03-21  Stefan Kost  <ensonic@users.sf.net>

	* FSM/PhatMan/Chorus.cpp:
	* FSM/dspchips/DSPChips.h:
	  Use rint() on linux. Revert the changer where I commented f2i out.
	  Add some comments.

2008-03-20  Krzysztof Foltman <wdev@foltman.com>

	* FSM/PhatMan/Chorus.cpp:
	* FSM/dspchips/DSPChips.h:
	  Attempt at making PhatMan actually work as expected.

2008-03-13  Stefan Kost  <ensonic@users.sf.net>

	* FSM/PhatMan/Chorus.cpp:
	  Copy result data back.

	* common/mdk/mdk.h:
	  Formatting.

2008-03-12  Stefan Kost  <ensonic@users.sf.net>

	* FSM/PhatMan/Chorus.cpp:
	* common/mdk/mdkimp.cpp:
	  Get the mdk from host.

2008-03-12  Stefan Kost  <ensonic@users.sf.net>

	* FSM/PhatMan/Chorus.cpp:
	  Workaround for crasher on one machine.

2008-03-10  Stefan Kost  <ensonic@users.sf.net>

	* common/MachineInterface.h:
	  Revert ABI breakage.

2008-03-10  Stefan Kost  <ensonic@users.sf.net>

	* configure.ac:
	  Add CFLAG to suppress gcc warning, that if we fix it would change the
	  ABI. Need to revert the changes in the header still.

2008-02-23  Krzysztof Foltman  <wdev@foltman.com>

	* FSM/Makefile.am:
	* FSM/PanzerDelay:
	* FSM/PanzerDelay/Delay.cpp:
	* FSM/PanzerDelay/Makefile.am:
	* FSM/PanzerDelay/panzer.rc:
	* FSM/PanzerDelay/resource.h:
	* FSM/PhatMan:
	* FSM/PhatMan/Chorus.cpp:
	* FSM/PhatMan/Makefile.am:
	* FSM/PhatMan/chorus.rc:
	* FSM/PhatMan/resource.h:
	* configure.ac:
          Add new machines (should work already, but they apparently don't)

2007-12-12  Stefan Kost  <ensonic@users.sf.net>

	* common/MachineInterface.h:
	  Fix gcc warnings.

2007-12-09  Stefan Kost  <ensonic@users.sf.net>

	* FSM/ArpMan/ArpMan.cpp:
	* FSM/Chorus/Chorus.cpp:
	* FSM/Infector/Channel.cpp:
	* FSM/Infector/Filters.cpp:
	* FSM/Infector/Infector.cpp:
	* FSM/Infector/Infector.h:
	* FSM/Infector/Track.cpp:
	* FSM/Infector/Vegetable.cpp:
	* FSM/Kick/Kick.cpp:
	* FSM/dspchips/DSPChips.h:
	  Add license headers.

2007-11-25  Stefan Kost  <ensonic@users.sf.net>

	* FSM/Infector/Infector.cpp:
	* FSM/Infector/Infector.h:
	  Use MAX_BUFFER_LENGTH in code. Remove some assert that where added to
	  track the problem but add one for numsamples.

	* common/MachineInterface.h:
	  Comment what MAX_BUFFER_LENGTH is used for.

2007-11-24  Stefan Kost  <ensonic@users.sf.net>

	* FSM/Infector/Infector.cpp:
	* FSM/Infector/Infector.h:
	  Enlarge fixed PWMBuffers. Remove debug log.

2007-11-23  Stefan Kost  <ensonic@users.sf.net>

	* FSM/Infector/Infector.cpp:
	* FSM/Infector/Vegetable.cpp:
	  More debug logging. Enable destructor.

2007-11-23  Stefan Kost  <ensonic@users.sf.net>

	* FSM/Infector/Infector.cpp:
	* FSM/Infector/Infector.h:
	  Some more debug logging and cleanups.

2007-11-21  Stefan Kost  <ensonic@users.sf.net>

	* FSM/Infector/Channel.cpp:
	* FSM/Infector/Filters.cpp:
	* FSM/Infector/Infector.cpp:
	* FSM/Infector/Track.cpp:
	* FSM/Infector/Vegetable.cpp:
	* FSM/Makefile.am:
	* FSM/dspchips/DSPChips.h:
	  Cleanup the sources a bit. Try to free the generated wave, but
	  disabled now as valgrind does not yet like it.

2007-11-19  Stefan Kost  <ensonic@users.sf.net>

	* FSM/Infector/Infector.cpp:
	* FSM/Infector/Makefile.am:
	* FSM/dspchips/DSPChips.h:
	  More porting. Now loads fine.

2007-11-13  Stefan Kost  <ensonic@users.sf.net>

	* configure.ac:
	  Also create Makefile for Infector, but not yet build by default.

2007-11-13  Krzysztof Foltman  <kfoltman@users.sourceforge.net>

	* FSM/Infector/Channel.cpp:
	* FSM/Infector/Filters.cpp:
	* FSM/Infector/Infector.cpp:
	* FSM/Infector/Infector.h:
	* FSM/Infector/Makefile.am:
	* FSM/Infector/Track.cpp:
	* FSM/Infector/Vegetable.cpp:
	  Preliminary commit just to get things going, it's not like it's going
	  to compile or anything - FFT library and the GUI are still missing.

2007-11-12  Stefan Kost  <ensonic@users.sf.net>

	* FSM/dspchips/DSPChips.h:
	  We don't seem to need the fft include.

2007-11-10  Stefan Kost  <ensonic@users.sf.net>

	* FSM/ArpMan/ArpMan.cpp:
	* FSM/ArpMan/Makefile.am:
	* FSM/Chorus/Chorus.cpp:
	* FSM/Chorus/Makefile.am:
	* FSM/Kick/Kick.cpp:
	* FSM/Kick/Makefile.am:
	* FSM/Makefile.am:
	* FSM/dspchips/DSPChips.h:
	* Makefile.am:
	* common/Makefile.am:
	* common/dsplib.h:
	* common/mdk/Makefile.am:
	* common/mdk/mdk.h:
	* common/mdk/mdkimp.cpp:
	* common/mdk/mdkimp.h:
	* configure.ac:
	  More machines ported. Initial native mdk implementation added.

2007-11-03  Stefan Kost  <ensonic@users.sf.net>

	* AUTHORS:
	* ChangeLog:
	* Elak/Dist2/Makefile.am:
	* Elak/Dist2/dist2.cpp:
	* Elak/Makefile.am:
	* Elak/SVF/Makefile.am:
	* Elak/SVF/svf.cpp:
	* FSM/Makefile.am:
	* Makefile.am:
	* NEWS:
	* autogen.sh:
	* common/MachineInterface.h:
	* common/windef.h:
	* configure.ac:
	  Importing sources.

